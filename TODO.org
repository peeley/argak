#+TODO: TODO IN-PROGRESS IDEA | DONE CANCELLED

* Front End
** TODO Fix centering of toggles in PrivacyEditor
   CLOSED: [2020-09-07 Mon 16:06]
   This is really long overdue. Feels like giving up on large part of project, but tbh it's nice to find
   a library that's 100% solved all the annoying reccuring bugs I've had to solve over and over.

** TODO Create data structure and functionality for undo/redo
   Using HTML Canvas, all that was needed was an array of serialized Stroke objects. Now with FabricJS, something more robust
   may be necessary inside VersionController. Also need to assess backend solutions.

** TODO Fix modifying objects via group select
   Should take place here in VersionController - looks like modified fields such as `top`, `left`, `scaleX`,
   `scaleY`, etc. are actually stored in the `object:modified` target field, and then in the `objects` field
   contained has relative offsets, e.g. the `top` of a modified object will be the `top` field of the target
   field added to the `top` field of the specific object.
   Helpful docs:
   - FabricJS docs for [[http://fabricjs.com/docs/fabric.ActiveSelection.html][ActiveSelection]]
   - More docs on breaking changes regarding [[http://fabricjs.com/v2-breaking-changes-2][selection handling]]

** TODO create logout websocket so user is automatically logged out
   In painting, page expiration gives no indicator so when user draws/updates title, there
   is no change or indication.

** TODO make different mouse cursors for different tools and states

** TODO add event listener for other users joining, see who else is drawing/watching

** IN-PROGRESS Add painting preview in home screen
   FabricJS allows for [[http://fabricjs.com/fabric-intro-part-3#serialization][serialization to SVG]], perhaps periodically serialize and store SVG in DB, then fetch on
   mouseover?
   Also convert home screen to grid of paintings for ease of navigation

** IN-PROGRESS UI/UX overhaul *ongoing*
*** TODO Landing page
*** DONE Tool select bar
    CLOSED: [2020-09-19 Sat 01:10]
    Could make a grid of icons - would need to find open source icons for each tool type

*** theming
*** keybinds/ergonomics
** IN-PROGRESS Add new tool types
*** Shapes
*** Image insertion
    Always need to be wary of user-uploaded content, but if this is being self-hosted then
    perhaps that worry is misplaced - self-hosted users are ultimately accountable for
    their own data, for better and for worse.
    Trying to get drag-and-drop working by simply grabbing the URL of the dragged object
    and using `fabric.Image.fromURL` to create the Image object, however the drag-and-drop
    API documentation is pretty thin for fabric. Links found so far:
      - https://stackoverflow.com/questions/35218368/how-to-add-image-to-fabric-canvas
      - https://jsfiddle.net/durga598/w8kkc/414/ - seems to actually work

*** DONE Text
    CLOSED: [2020-09-12 Sat 02:29]
    Creating text box and editing existing text works, need to set up [[tool options]]
    menu to set font/text color/bold/underline/etc.

*** Charts/tables
*** TODO Create tool options menu specific to each kind of tool
    <<tool options>>
    - Pen tool has stroke width, stroke style, etc.
    - Shapes have filled vs outline
    - Text has font, font size, etc.

*** TODO Fill tool
    This [[https://ben.akrin.com/?p=7888][blog]] might have some ideas
    Need to increase performance, filling more than once or without limit to amount of pixels replaced gives huge
    slowdown. Also need to fix problem with alpha values in `rgba()` strings needing to be 255.

    Putting back to TODO, 09-07-2020
    Now that we're using FabricJS, might need to rethink strategy from basic flood fill since FabricJS isn't really
    meant for directly manipulating pixels on the canvas.

** DONE Delete canvas objects
   CLOSED: [2020-09-13 Sun 22:57]
   <<delete-frontend>>
   Perhaps add hotkey on canvas vi event listeners
   Related: [[delete-backend]]

** DONE Fix automatic canvas sizing to fit screen, have canvas visual size and programmatic size be different.
   Fixed by overhaul to FabricJS.
   CLOSED: [2020-09-07 Mon 16:12]
   Related: [[*Change pan tool to be unable to pan beyond canvas boundaries]]

** DONE Refactor canvas code to use Fabric.js
   Still need to finish undo/redo management, but most basic features that were present using HTML Canvas are present
   and much, much more performant and resilient.
   CLOSED: [2020-09-07 Mon 16:09]

** DONE Change pan tool to be unable to pan beyond canvas boundaries
   CLOSED: [2020-08-24 Mon 22:08]
   This might be blocked by [[Fix automatic canvas sizing to fit screen, have canvas visual size and programmatic size be different.][this]], need to make decision on if canvases should have fixed size or not

** DONE Convert /home from JS to TypeScript
   CLOSED: [2020-08-23 Sun 23:41]
** DONE Fix "Submit" button on PrivacyEditor to point to correct endpoint
   CLOSED: [2020-08-22 Sat 23:57]
   Actually just removed "Submit" button, toggles on `edit_public` and `view_public` just send PUT request independently

** DONE Add flow for editing existing permission on painting
   CLOSED: [2020-08-22 Sat 23:51]
   Also need to fix "Submit" button in modal, for some reason is pinging `/api/p/{id}`
** DONE Fix offsets after zoom, yet again
   CLOSED: [2020-08-11 Tue 01:19]
** DONE Refactor PanTool to not be a Tool
   CLOSED: [2020-08-11 Tue 01:28]
** DONE Split home screen into blade components (note: converted /home to React)
   CLOSED: [2020-08-11 Tue 01:21]
** DONE Refactoring frontend code to TypeScript
   CLOSED: [2020-08-11 Tue 01:22]
** DONE Rewrite stroke objects to be ES6 classes, get rid of lack of polymorphism in VersionController
   CLOSED: [2020-08-11 Tue 01:22]
** DONE Refactor coordinate offsets into Context object instead of being tracked by each tool individually
   CLOSED: [2020-08-11 Tue 01:22]
** DONE Loading animation while strokes object is being downloaded/rendered
   CLOSED: [2020-08-11 Tue 01:22]
** DONE Refactor `fetch` calls in React to use `axios`
   CLOSED: [2020-08-11 Tue 01:24]
** DONE Zoom in on, pan over sketch
   CLOSED: [2020-08-11 Tue 01:22]
- Fix mouse coordinate offsets when zoomed
- Zoom in at mouse location
- Zoom hotkeys
- Reset button zoom level to default, zoom level indicators

** DONE Indicator/shadow for certain tools
   CLOSED: [2020-08-11 Tue 01:21]
** DONE Utility bar at top to download sketch, share link, edit title, etc.
   CLOSED: [2020-08-11 Tue 01:23]
** DONE JQuery really isn't cutting it even for simpler interactions like in the home page * maybe start working on React component
   CLOSED: [2020-08-11 Tue 01:24]
** DONE Draw on canvas w/ pen, see changes instantly
   CLOSED: [2020-08-11 Tue 01:22]
- Edit color, width of stroke

** DONE Undo/redo functionality, version history
   CLOSED: [2020-08-11 Tue 01:22]
- Redraw canvas after undo/redo
- Make sure undo then draw isn't fucked

** DONE From home screen be able to delete painting, edit title, make private
   CLOSED: [2020-08-11 Tue 01:24]

** CANCELLED Make clearing screen an undoable action
  CLOSED: [2020-08-11 Tue 01:26]
- didn't do, makes for worse user experience overall, feels like not what you'd predict.*


* Back End
** TODO Deal with max size of broadcast events
   `Pusher error 413` occurs when pushed events exceed a size of more than a few KB.

** TODO Work on performance of broadcast events
   Waiting for 200 OK before showing changes locally feels really slow, bad UX.
   Could solve by using local Redis for pub/sub, but that involves more dependencies, possibly more brittle.

** IN-PROGRESS *!!TESTING!!*
*** DONE Painting tests
    CLOSED: [2020-08-20 Thu 14:57]

*** DONE Permission tests
    CLOSED: [2020-08-23 Sun 21:32]
    Kind of overlaps with painting tests, maybe just test add/deleting permissions
*** TODO Broadcast testing?
*** TODO Browser/API tests
** DONE Delete fabric object from painting in backend
   CLOSED: [2020-09-13 Sun 22:57]
   <<delete-backend>>
   Will require changes to UpdateProtocol
   Related: [[delete-fronted]]

** DONE Automatically push changes in canvas to all viewers
  CLOSED: [2020-08-11 Tue 01:20]
- Setup/install Redis for Broadcasting backend
- Push changes to channel from update protocol on backend
- Write channel listeners on frontend
- Others view stroke indicators? May not be performant

** DONE Make logout timer not so obnoxious/learn how authentication actually works lmao
  CLOSED: [2020-08-11 Tue 01:21]
** DONE Increase performance, perhaps rework painting serialization/protocol?
  CLOSED: [2020-08-11 Tue 01:22]
** DONE Synchronise canvas after clearing backend
   CLOSED: [2020-08-11 Tue 01:36]
** DONE Add backend & database
   CLOSED: [2020-08-11 Tue 01:23]
- Save sketches to acct
- User auth, accounts

** DONE Add new users to painting when private
  CLOSED: [2020-08-11 Tue 01:22]
- Create backend controller
- Create form in options modal in /home

** DONE Distinguish between permissions to view/edit sketch
   CLOSED: [2020-08-11 Tue 01:42]


* DevOps/Misc
** TODO Figure out method for self-hosting
   Docker image?
   Would also need to figure out how to manage dependencies for mail & pub/sub - would end users be
   responsible for providing their own API keys?

** DONE Convert this doc to org-mode lol
   CLOSED: [2020-08-23 Sun 14:53]
** DONE Edit build script to detect changes in React app, build automatically
   CLOSED: [2020-08-11 Tue 01:24]
   Add debug .env flag for debug printing

** IDEA Maybe contribute to laravel-echo
- Typescript typings are basically nonexistant, low hanging fruit
